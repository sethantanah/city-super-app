<!-- components/job-search.ejs -->
<div class="job-search-component">
  <!-- Sticky Search Bar -->
  <div id="stickySearch" class="fixed top-0 left-0 right-0 z-50 -translate-y-full transition-all duration-300 opacity-0 pointer-events-none bg-gradient-to-br from-blue-900 to-indigo-900 shadow-md">
    <div class="container mx-auto px-4 py-4">
      <form action="/jobs" method="GET" class="flex items-center gap-2">
        <div class="flex-grow relative">
          <input 
            type="text" 
            name="q" 
            placeholder="Search jobs..." 
            value="<%= locals.query || '' %>"
            class="w-full pl-10 pr-4 py-2 rounded-lg bg-white/90 focus:outline-none focus:ring-2 focus:ring-blue-300"
          >
          <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
        <button type="submit" class="bg-white text-blue-700 hover:bg-blue-50 px-4 py-2 rounded-lg font-medium transition-colors whitespace-nowrap">
          Search
        </button>
      </form>
    </div>
  </div>

  <!-- Loading Overlay -->
  <div id="loadingOverlay" class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
    <div class="bg-white rounded-xl p-8 max-w-sm w-full mx-4 shadow-2xl">
      <div class="flex flex-col items-center">
        <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500 mb-4"></div>
        <h3 class="text-xl font-semibold text-gray-800 mb-2">Finding Jobs</h3>
        <p class="text-gray-600 text-center">Searching for the best matches...</p>
      </div>
    </div>
  </div>

  <!-- Main Hero Section -->
  <div class="bg-gradient-to-br from-blue-900 to-indigo-900 text-white pt-20 pb-16">
    <div class="container mx-auto px-4">
      <div class="max-w-5xl mx-auto text-center">
        <!-- Animated Headline -->
        <div class="h-24 md:h-32 mb-6 flex items-center justify-center overflow-hidden">
          <div class="relative h-full w-full">
            <h1 class="text-4xl md:text-5xl font-bold leading-tight absolute inset-0 flex items-center justify-center transition-all duration-1000 ease-in-out animate-rotateWords">
              <span class="block">Find Your Perfect Job Match</span>
              <span class="block">Discover Your Next Career</span>
              <span class="block">Build Your Future Today</span>
              <span class="block">Your Dream Job Awaits</span>
            </h1>
          </div>
        </div>
        
        <!-- Animated Subtitle -->
        <div class="h-12 mb-10 flex items-center justify-center overflow-hidden">
          <div class="relative h-full w-full">
            <p class="text-xl text-blue-100 max-w-3xl mx-auto absolute inset-0 flex items-center justify-center transition-all duration-1000 ease-in-out animate-rotateWords delay-500">
              <span class="block">Search from over 10,000+ job listings</span>
              <span class="block">Browse local jobs in your area</span>
              <span class="block">Remote and hybrid opportunities</span>
              <span class="block">Top companies hiring now</span>
            </p>
          </div>
        </div>
  
        <!-- Quick Local Jobs Button -->
        <div class="animate-fadeIn mb-8">
          <button class="inline-flex items-center px-6 py-3 bg-white/10 hover:bg-white/20 border border-white/20 rounded-full text-white font-medium transition-all duration-300 group">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 group-hover:scale-110 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            Browse Local Jobs
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </div>

        <!-- Main Search Form -->
        <form id="mainSearchForm" action="/jobs" method="GET" class="mb-8">
          <div class="flex flex-col md:flex-row gap-4 mb-4">
            <div class="flex-grow relative">
              <input 
                type="text" 
                name="q" 
                placeholder="Job title, company, or keywords" 
                value="<%= locals.query || '' %>"
                class="w-full pl-12 pr-4 py-4 rounded-xl bg-white text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-lg border border-gray-200"
              >
              <svg class="absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-4 rounded-xl font-semibold transition-all duration-200 hover:scale-[1.02] shadow-lg flex items-center justify-center whitespace-nowrap">
              Search Jobs
            </button>
          </div>
          
          <div class="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
            <!-- Category Select -->
            <div>
              <%- include('../components/custom-select', {
                name: 'category',
                placeholder: 'All Categories',
                selectedValue: locals.category,
                options: locals.categories ? locals.categories.map(cat => ({ value: cat, label: cat })) : [],
                icon: '' // Assuming you have a folder.svg icon
              }) %>
            </div>
          
            <!-- Job Type Select -->
            <div>
              <%- include('../components/custom-select', {
                name: 'type',
                placeholder: 'All Job Types',
                selectedValue: locals.type,
                options: locals.jobTypes ? locals.jobTypes.map(type => ({ value: type, label: type })) : [],
                icon: '' // Assuming you have a briefcase.svg icon
              }) %>
            </div>
          
            <!-- Location Select -->
            <div>
              <%- include('../components/custom-select', {
                name: 'location',
                placeholder: 'All Locations',
                selectedValue: locals.location,
                options: locals.locations ? locals.locations.map(loc => ({ value: loc, label: loc })) : [],
                icon: '' // Assuming you have a location.svg icon
              }) %>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const stickySearch = document.getElementById('stickySearch');
      const loadingOverlay = document.getElementById('loadingOverlay');
      const mainSearchForm = document.getElementById('mainSearchForm');
      const mainSearchInput = mainSearchForm.querySelector('input[name="q"]');
      const stickySearchInput = stickySearch.querySelector('input[name="q"]');
      
      // Sync search inputs
      function syncInputs() {
        stickySearchInput.value = mainSearchInput.value;
      }
      
      mainSearchInput.addEventListener('input', syncInputs);
      stickySearchInput.addEventListener('input', function() {
        mainSearchInput.value = this.value;
      });
      
      // Sticky search behavior
      window.addEventListener('scroll', function() {
        if (window.scrollY > 200) {
          stickySearch.classList.remove('-translate-y-full', 'opacity-0', 'pointer-events-none');
          stickySearch.classList.add('translate-y-0', 'opacity-100', 'pointer-events-auto');
        } else {
          stickySearch.classList.add('-translate-y-full', 'opacity-0', 'pointer-events-none');
          stickySearch.classList.remove('translate-y-0', 'opacity-100', 'pointer-events-auto');
        }
      });
      
      // Show loading on form submit
      function showLoading() {
        loadingOverlay.classList.remove('opacity-0', 'pointer-events-none');
        loadingOverlay.classList.add('opacity-100', 'pointer-events-auto');
        document.body.style.overflow = 'hidden';
      }
      
      // Hide loading (call this when your data loads)
      function hideLoading() {
        loadingOverlay.classList.add('opacity-0', 'pointer-events-none');
        loadingOverlay.classList.remove('opacity-100', 'pointer-events-auto');
        document.body.style.overflow = '';
      }
      
      // Form submission handlers
      [mainSearchForm, stickySearch.querySelector('form')].forEach(form => {
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          showLoading();
          
          // Simulate API call - replace with actual form submission
          setTimeout(() => {
            //hideLoading();
            this.submit(); // Remove this if using AJAX
          }, 100);
        });
      });
    });
  </script>

  <style>
    @keyframes rotateWords {
      0%, 20% { transform: translateY(0); opacity: 1; }
      25%, 45% { transform: translateY(-100%); opacity: 0; }
      50%, 70% { transform: translateY(-200%); opacity: 0; }
      75%, 95% { transform: translateY(-300%); opacity: 0; }
      100% { transform: translateY(-400%); opacity: 0; }
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .animate-rotateWords span {
      position: absolute;
      width: 100%;
      opacity: 0;
      animation: rotateWords 16s infinite;
    }
    
    .animate-rotateWords span:nth-child(1) { animation-delay: 0s; }
    .animate-rotateWords span:nth-child(2) { animation-delay: 4s; }
    .animate-rotateWords span:nth-child(3) { animation-delay: 8s; }
    .animate-rotateWords span:nth-child(4) { animation-delay: 12s; }
    
    .animate-fadeIn {
      animation: fadeIn 1.5s ease-out;
    }
    
    .delay-500 { animation-delay: 0.5s; }
  </style>
</div>